From 3c886c15272d403e2aed710e8417c65d9ca2c21a Mon Sep 17 00:00:00 2001
From: Michael Riesch <michael.riesch@collabora.com>
Date: Mon, 1 Sep 2025 23:40:16 +0200
Subject: [PATCH 115/123] media: rockchip: rkcsi: enable interrupts and error
 reporting

Signed-off-by: Michael Riesch <michael.riesch@collabora.com>
---
 drivers/media/platform/rockchip/rkcsi/rkcsi.c | 48 ++++++++++++++++++-
 1 file changed, 47 insertions(+), 1 deletion(-)

diff --git a/drivers/media/platform/rockchip/rkcsi/rkcsi.c b/drivers/media/platform/rockchip/rkcsi/rkcsi.c
index 5658ffb60..e5fd16b4c 100644
--- a/drivers/media/platform/rockchip/rkcsi/rkcsi.c
+++ b/drivers/media/platform/rockchip/rkcsi/rkcsi.c
@@ -265,6 +265,9 @@ static int rkcsi_start(struct rkcsi_device *csi_dev)
 	rkcsi_write(csi_dev, CSI2HOST_CONTROL, control);
 	rkcsi_write(csi_dev, CSI2HOST_CSI2_RESETN, 1);
 
+	rkcsi_write(csi_dev, CSI2HOST_MSK1, 0x0);
+	rkcsi_write(csi_dev, CSI2HOST_MSK2, 0x0);
+
 	ret = phy_power_on(csi_dev->phy);
 	if (ret)
 		return ret;
@@ -628,11 +631,32 @@ static const struct of_device_id rkcsi_of_match[] = {
 };
 MODULE_DEVICE_TABLE(of, rkcsi_of_match);
 
+static irqreturn_t rkcsi_isr(int irq, void *ctx)
+{
+	struct device *dev = ctx;
+	struct rkcsi_device *csi_dev = dev_get_drvdata(dev);
+	irqreturn_t ret = IRQ_NONE;
+#if 1
+	u32 state, err1, err2;
+
+	state = rkcsi_read(csi_dev, CSI2HOST_PHY_STATE);
+	err1 = rkcsi_read(csi_dev, CSI2HOST_ERR1);
+	err2 = rkcsi_read(csi_dev, CSI2HOST_ERR2);
+
+	dev_info(dev, "%s got CSI2HOST_PHY_STATE = 0x%x", __func__, state);
+	dev_info(dev, "%s got CSI2HOST_ERR1 = 0x%x", __func__, err1);
+	dev_info(dev, "%s got CSI2HOST_ERR2 = 0x%x", __func__, err2);
+#endif
+	ret = IRQ_HANDLED;
+
+	return ret;
+}
+
 static int rkcsi_probe(struct platform_device *pdev)
 {
 	struct device *dev = &pdev->dev;
 	struct rkcsi_device *csi_dev;
-	int ret;
+	int ret, irq;
 
 	csi_dev = devm_kzalloc(dev, sizeof(*csi_dev), GFP_KERNEL);
 	if (!csi_dev)
@@ -644,6 +668,28 @@ static int rkcsi_probe(struct platform_device *pdev)
 	if (IS_ERR(csi_dev->base_addr))
 		return PTR_ERR(csi_dev->base_addr);
 
+	irq = platform_get_irq_byname(pdev, "intr1");
+	if (irq > 0) {
+		ret = devm_request_irq(dev, irq, rkcsi_isr, 0,
+				       dev_driver_string(dev), dev);
+		if (ret < 0)
+			dev_err(&pdev->dev,
+				"request csi-intr1 irq failed: %d\n", ret);
+	} else {
+		dev_err(&pdev->dev, "No found irq csi-intr1\n");
+	}
+
+	irq = platform_get_irq_byname(pdev, "intr2");
+	if (irq > 0) {
+		ret = devm_request_irq(dev, irq, rkcsi_isr, 0,
+				       dev_driver_string(dev), dev);
+		if (ret < 0)
+			dev_err(&pdev->dev, "request csi-intr2 failed: %d\n",
+				ret);
+	} else {
+		dev_err(&pdev->dev, "No found irq csi-intr2\n");
+	}
+
 	ret = devm_clk_bulk_get_all(dev, &csi_dev->clks);
 	if (ret != RKCSI_CLKS_MAX)
 		return dev_err_probe(dev, -ENODEV, "failed to get clocks\n");
-- 
2.47.3

