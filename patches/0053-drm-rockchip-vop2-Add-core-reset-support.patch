From fd966c7f5af3a572eb6d65121208a84d08e1f223 Mon Sep 17 00:00:00 2001
From: Sebastian Reichel <sebastian.reichel@collabora.com>
Date: Thu, 14 Nov 2024 17:36:18 +0100
Subject: [PATCH 53/68] drm/rockchip: vop2: Add core reset support

A previous from Detlev Casanova adds reset handling for the
video ports. This also resets the AHB and AXI interface when
the system binds the VOP2 controller.

This fixes issues when the bootloader (or a previously running
kernel when using kexec) left the VOP2 initialized to some degree.

Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
---
 drivers/gpu/drm/rockchip/rockchip_drm_vop2.c | 24 ++++++++++++++++++++
 1 file changed, 24 insertions(+)

diff --git a/drivers/gpu/drm/rockchip/rockchip_drm_vop2.c b/drivers/gpu/drm/rockchip/rockchip_drm_vop2.c
index 43ae56b48..170a53f2d 100644
--- a/drivers/gpu/drm/rockchip/rockchip_drm_vop2.c
+++ b/drivers/gpu/drm/rockchip/rockchip_drm_vop2.c
@@ -40,6 +40,12 @@
 #include "rockchip_drm_vop2.h"
 #include "rockchip_rgb.h"
 
+enum {
+	RST_ACLK,
+	RST_HCLK,
+	RST_VOP2_MAX
+};
+
 /*
  * VOP2 architecture
  *
@@ -219,6 +225,7 @@ struct vop2 {
 	struct clk *pclk;
 	struct clk *pll_hdmiphy0;
 	struct clk *pll_hdmiphy1;
+	struct reset_control_bulk_data resets[RST_VOP2_MAX];
 
 	/* optional internal rgb encoder */
 	struct rockchip_rgb *rgb;
@@ -3707,6 +3714,23 @@ static int vop2_bind(struct device *dev, struct device *master, void *data)
 
 	dev_set_drvdata(dev, vop2);
 
+	vop2->resets[RST_ACLK].id = "aclk";
+	vop2->resets[RST_HCLK].id = "hclk";
+	ret = devm_reset_control_bulk_get_optional_exclusive(vop2->dev,
+						RST_VOP2_MAX, vop2->resets);
+	if (ret) {
+		drm_err(vop2->drm, "failed to get resets: %d\n", ret);
+		return ret;
+	}
+
+	ret = reset_control_bulk_assert(RST_VOP2_MAX, vop2->resets);
+	if (ret < 0)
+		drm_warn(vop2->drm, "failed to assert resets\n");
+	udelay(10);
+	ret = reset_control_bulk_deassert(RST_VOP2_MAX, vop2->resets);
+	if (ret < 0)
+		drm_warn(vop2->drm, "failed to deassert resets\n");
+
 	res = platform_get_resource_byname(pdev, IORESOURCE_MEM, "vop");
 	if (!res) {
 		drm_err(vop2->drm, "failed to get vop2 register byname\n");
-- 
2.47.2

